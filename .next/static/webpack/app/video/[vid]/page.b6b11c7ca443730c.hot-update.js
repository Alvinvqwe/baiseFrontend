"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/video/[vid]/page",{

/***/ "(app-pages-browser)/./components/players/plyr.config.ts":
/*!*******************************************!*\
  !*** ./components/players/plyr.config.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   videoOptions: function() { return /* binding */ videoOptions; },\n/* harmony export */   videoSource: function() { return /* binding */ videoSource; }\n/* harmony export */ });\nconst videoSource = {\n    type: \"video\",\n    title: \"Example Video\",\n    sources: [\n        {\n            src: \"http://www.baisehub.com:7000/video/test.mp4\",\n            type: \"video/mp4\",\n            size: 1080\n        },\n        {\n            src: \"/test.mp4\",\n            type: \"video/mp4\",\n            size: 720\n        }\n    ],\n    poster: \"test_cover.jpg\"\n};\nconst videoOptions = {\n    controls: [\n        \"play-large\",\n        \"restart\",\n        \"rewind\",\n        \"play\",\n        \"fast-forward\",\n        \"progress\",\n        \"current-time\",\n        \"duration\",\n        \"mute\",\n        \"volume\",\n        \"captions\",\n        \"settings\",\n        \"pip\",\n        \"airplay\",\n        \"download\",\n        \"fullscreen\"\n    ],\n    settings: [\n        \"captions\",\n        \"quality\",\n        \"speed\",\n        \"loop\"\n    ],\n    autoplay: true,\n    loop: {\n        active: true\n    },\n    quality: {\n        default: 720,\n        options: [\n            1080,\n            720\n        ]\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvcGxheWVycy9wbHlyLmNvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUVPLE1BQU1BLGNBQWM7SUFDekJDLE1BQU07SUFDTkMsT0FBTztJQUNQQyxTQUFTO1FBQ1A7WUFDRUMsS0FBSztZQUNMSCxNQUFNO1lBQ05JLE1BQU07UUFDUjtRQUNBO1lBQ0VELEtBQUs7WUFDTEgsTUFBTTtZQUNOSSxNQUFNO1FBQ1I7S0FDRDtJQUNEQyxRQUFRO0FBZ0JWLEVBQUU7QUFFSyxNQUFNQyxlQUFlO0lBQzFCQyxVQUFVO1FBQ1I7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDRDtJQUNEQyxVQUFVO1FBQUM7UUFBWTtRQUFXO1FBQVM7S0FBTztJQUNsREMsVUFBVTtJQUNWQyxNQUFNO1FBQUVDLFFBQVE7SUFBSztJQUNyQkMsU0FBUztRQUNQQyxTQUFTO1FBQ1RDLFNBQVM7WUFBQztZQUFNO1NBQUk7SUFDdEI7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvcGxheWVycy9wbHlyLmNvbmZpZy50cz9mODM2Il0sInNvdXJjZXNDb250ZW50IjpbInR5cGUgTWVkaWFUeXBlID0gXCJ2aWRlb1wiIHwgXCJhdWRpb1wiO1xuXG5leHBvcnQgY29uc3QgdmlkZW9Tb3VyY2UgPSB7XG4gIHR5cGU6IFwidmlkZW9cIiBhcyBNZWRpYVR5cGUsXG4gIHRpdGxlOiBcIkV4YW1wbGUgVmlkZW9cIixcbiAgc291cmNlczogW1xuICAgIHtcbiAgICAgIHNyYzogXCJodHRwOi8vd3d3LmJhaXNlaHViLmNvbTo3MDAwL3ZpZGVvL3Rlc3QubXA0XCIsXG4gICAgICB0eXBlOiBcInZpZGVvL21wNFwiLFxuICAgICAgc2l6ZTogMTA4MCxcbiAgICB9LFxuICAgIHtcbiAgICAgIHNyYzogXCIvdGVzdC5tcDRcIixcbiAgICAgIHR5cGU6IFwidmlkZW8vbXA0XCIsXG4gICAgICBzaXplOiA3MjAsXG4gICAgfSxcbiAgXSxcbiAgcG9zdGVyOiBcInRlc3RfY292ZXIuanBnXCIsXG4gIC8vICAgdHJhY2tzOiBbXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGtpbmQ6IFwiY2FwdGlvbnNcIixcbiAgLy8gICAgICAgbGFiZWw6IFwiRW5nbGlzaFwiLFxuICAvLyAgICAgICBzcmNsYW5nOiBcImVuXCIsXG4gIC8vICAgICAgIHNyYzogXCJwYXRoX3RvX2NhcHRpb25zX2ZpbGUudnR0XCIsIC8vIOWtl+W5leaWh+S7tui3r+W+hFxuICAvLyAgICAgICBkZWZhdWx0OiB0cnVlLFxuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAga2luZDogXCJjYXB0aW9uc1wiLFxuICAvLyAgICAgICBsYWJlbDogXCJTcGFuaXNoXCIsXG4gIC8vICAgICAgIHNyY2xhbmc6IFwiZXNcIixcbiAgLy8gICAgICAgc3JjOiBcInBhdGhfdG9fc3BhbmlzaF9jYXB0aW9uc19maWxlLnZ0dFwiLFxuICAvLyAgICAgfSxcbiAgLy8gICBdLFxufTtcblxuZXhwb3J0IGNvbnN0IHZpZGVvT3B0aW9ucyA9IHtcbiAgY29udHJvbHM6IFtcbiAgICBcInBsYXktbGFyZ2VcIiwgLy8g5aSn5pKt5pS+5oyJ6ZKuXG4gICAgXCJyZXN0YXJ0XCIsIC8vIOmHjeaSreaMiemSrlxuICAgIFwicmV3aW5kXCIsIC8vIOWQjumAgOaMiemSrlxuICAgIFwicGxheVwiLCAvLyDmkq3mlL7mjInpkq5cbiAgICBcImZhc3QtZm9yd2FyZFwiLCAvLyDlv6vov5vmjInpkq5cbiAgICBcInByb2dyZXNzXCIsIC8vIOi/m+W6puadoVxuICAgIFwiY3VycmVudC10aW1lXCIsIC8vIOW9k+WJjeaXtumXtOaYvuekulxuICAgIFwiZHVyYXRpb25cIiwgLy8g6KeG6aKR5oC75pe26ZW/5pi+56S6XG4gICAgXCJtdXRlXCIsIC8vIOmdmemfs+aMiemSrlxuICAgIFwidm9sdW1lXCIsIC8vIOmfs+mHj+aOp+WItlxuICAgIFwiY2FwdGlvbnNcIiwgLy8g5a2X5bmV5o6n5Yi25oyJ6ZKuXG4gICAgXCJzZXR0aW5nc1wiLCAvLyDorr7nva7mjInpkq5cbiAgICBcInBpcFwiLCAvLyDnlLvkuK3nlLvmjInpkq5cbiAgICBcImFpcnBsYXlcIiwgLy8gQWlyUGxheSDmjInpkq5cbiAgICBcImRvd25sb2FkXCIsIC8vIOS4i+i9veaMiemSru+8jOWPquacieWcqOS9v+eUqCBobHMg5oiWIGh0bWw1IOinhumikea6kOaXtuaUr+aMgVxuICAgIFwiZnVsbHNjcmVlblwiLCAvLyDlhajlsY/mjInpkq5cbiAgXSxcbiAgc2V0dGluZ3M6IFtcImNhcHRpb25zXCIsIFwicXVhbGl0eVwiLCBcInNwZWVkXCIsIFwibG9vcFwiXSxcbiAgYXV0b3BsYXk6IHRydWUsIC8vIOiHquWKqOaSreaUvlxuICBsb29wOiB7IGFjdGl2ZTogdHJ1ZSB9LCAvLyDlvqrnjq/mkq3mlL5cbiAgcXVhbGl0eToge1xuICAgIGRlZmF1bHQ6IDcyMCwgLy8g6buY6K6k6LSo6YePXG4gICAgb3B0aW9uczogWzEwODAsIDcyMF0sIC8vIOWPr+S+m+mAieaLqeeahOi0qOmHj+mAiemhuVxuICB9LFxufTtcbiJdLCJuYW1lcyI6WyJ2aWRlb1NvdXJjZSIsInR5cGUiLCJ0aXRsZSIsInNvdXJjZXMiLCJzcmMiLCJzaXplIiwicG9zdGVyIiwidmlkZW9PcHRpb25zIiwiY29udHJvbHMiLCJzZXR0aW5ncyIsImF1dG9wbGF5IiwibG9vcCIsImFjdGl2ZSIsInF1YWxpdHkiLCJkZWZhdWx0Iiwib3B0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/players/plyr.config.ts\n"));

/***/ })

});